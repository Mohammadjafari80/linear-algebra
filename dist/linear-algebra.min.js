!function(t,r){"use strict";"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?module.exports=r():t.linearAlgebra=r()}(this,function(){"use strict";var t=function(t){throw new Error("linear-algebra: "+t)};return function(r){r=r||{},r.add&&console.warn("linear-algebra: adder (options.add) will not be used in non-precision version");var s={},e=s.Vector=function(t){this.data=t,this.size=t.length};Object.defineProperty(e.prototype,"isVector",{value:!0}),e.prototype.scale=function(t){for(var r=new Array(this.size),s=0;s<this.size;++s)r[s]=this.data[s]*t;return new e(r)},e.prototype.scaleP=function(t){for(var r=0;r<this.size;++r)this.data[r]*=t;return this},e.zero=function(t){for(var r=new Array(t),s=0;t>s;++s)r[s]=0;return new e(r)};var o=s.Matrix=function(t){this.data=t,this.rows=t.length,this.cols=t[0].length,this.size=[this.rows,this.cols]};return Object.defineProperty(o.prototype,"isMatrix",{value:!0}),o.prototype.scale=function(t){for(var r=new Array(this.rows),s=0;s<this.rows;++s){r[s]=new Array(this.cols);for(var e=0;e<this.cols;++e)r[s][e]=this.data[s][e]*t}return new o(r)},o.prototype.scale=function(t){for(var r=new Array(this.rows),s=0;s<this.rows;++s){r[s]=new Array(this.cols);for(var e=0;e<this.cols;++e)r[s][e]=this.data[s][e]*t}return new o(r)},o.prototype.scaleP=function(t){for(var r=0;r<this.rows;++r)for(var s=0;s<this.cols;++s)this.data[r][s]*=t;return this},o.prototype.transpose=function(){var t,r,s=new Array(this.cols);for(r=0;r<this.cols;++r)for(s[r]=new Array(this.rows),t=0;t<this.rows;++t)s[r][t]=this.data[t][r];return new o(s)},o.identity=function(t){return o.scalar(t,1)},o.scalar=function(t,r){var s,e,i=new Array(t);for(s=0;t>s;++s){for(i[s]=new Array(t),e=0;t>e;++e)i[s][e]=0;i[s][s]=r}return new o(i)},e.prototype.dot=function(r){this.size!==r.size&&t("Vector dot product requires vectors to have same size");for(var s=0,e=0;e<this.size;++e)s+=this.data[e]*r.data[e];return s},e.prototype.minus=function(r){this.size!==r.size&&t("Vector subtraction requires vectors to have same size");for(var s=new Array(this.size),o=0;o<this.size;++o)s[o]=this.data[o]-r.data[o];return new e(s)},e.prototype.minusP=function(r){this.size!==r.size&&t("Vector subtraction requires vectors to have same size");for(var s=0;s<this.size;++s)this.data[s]=this.data[s]-r.data[s];return this},e.prototype.plus=function(r){this.size!==r.size&&t("Vector addition requires vectors to have same size");for(var s=new Array(this.size),o=0;o<this.size;++o)s[o]=this.data[o]+r.data[o];return new e(s)},e.prototype.plusP=function(r){this.size!==r.size&&t("Vector addition requires vectors to have same size");for(var s=0;s<this.size;++s)this.data[s]=this.data[s]+r.data[s];return this},e.prototype.sum=function(){for(var t=0,r=0;r<this.size;++r)t+=this.data[r];return t},o.prototype.dot=function(r,s){this.cols!==s.size&&t("Vector dot product requires this.columns = vector.size");for(var e=0,o=0;o<this.cols;++o)e+=this.data[r][o]*s.data[o];return e},o.prototype.mul=function(r){var s,i,a,n;if(r.isMatrix){for(this.cols!==r.rows&&t("Multiplying by matrix requires this.columns = matrix.rows"),s=new Array(this.rows),i=0;i<this.rows;++i)for(s[i]=new Array(r.cols),n=0;n<r.cols;++n)for(s[i][n]=0,a=0;a<this.cols;++a)s[i][n]+=this.data[i][a]*r.data[a][n];return new o(s)}if(r.isVector){for(this.cols!==r.size&&t("Multiplying by vector requires this.columns = vector.size"),s=new Array(this.rows),i=0;i<this.rows;++i)for(s[i]=0,a=0;a<this.cols;++a)s[i]+=this.data[i][a]*r.data[a];return new e(s)}},o.prototype.plusCols=function(r){this.cols!==r.size&&t("Vector length must equal no. of columns");for(var s=new Array(this.rows),e=0;e<this.rows;++e){s[e]=new Array(this.cols);for(var i=0;i<this.cols;++i)s[e][i]=this.data[e][i]+r.data[i]}return new o(s)},o.prototype.plusColsP=function(r){this.cols!==r.size&&t("Vector length must equal no. of columns");for(var s=0;s<this.rows;++s)for(var e=0;e<this.cols;++e)this.data[s][e]+=r.data[e];return this},s}});
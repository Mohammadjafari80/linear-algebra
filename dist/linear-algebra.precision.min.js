!function(t,r){"use strict";"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?module.exports=r():t.linearAlgebra=r()}(this,function(){"use strict";var t=function(t){throw new Error("linear-algebra: "+t)};return function(r){r=r||{};var s=r.add;s||t("options.add must be set for precision calculation");var e={},i=e.Vector=function(t){this.data=t,this.size=t.length};Object.defineProperty(i.prototype,"isVector",{value:!0}),i.prototype.scale=function(t){for(var r=new Array(this.size),s=0;s<this.size;++s)r[s]=this.data[s]*t;return new i(r)},i.prototype.scaleP=function(t){for(var r=0;r<this.size;++r)this.data[r]*=t;return this},i.zero=function(t){for(var r=new Array(t),s=0;t>s;++s)r[s]=0;return new i(r)};var o=e.Matrix=function(t){this.data=t,this.rows=t.length,this.cols=t[0].length,this.size=[this.rows,this.cols]};return Object.defineProperty(o.prototype,"isMatrix",{value:!0}),o.prototype.scale=function(t){for(var r=new Array(this.rows),s=0;s<this.rows;++s){r[s]=new Array(this.cols);for(var e=0;e<this.cols;++e)r[s][e]=this.data[s][e]*t}return new o(r)},o.prototype.scale=function(t){for(var r=new Array(this.rows),s=0;s<this.rows;++s){r[s]=new Array(this.cols);for(var e=0;e<this.cols;++e)r[s][e]=this.data[s][e]*t}return new o(r)},o.prototype.scaleP=function(t){for(var r=0;r<this.rows;++r)for(var s=0;s<this.cols;++s)this.data[r][s]*=t;return this},o.prototype.transpose=function(){var t,r,s=new Array(this.cols);for(r=0;r<this.cols;++r)for(s[r]=new Array(this.rows),t=0;t<this.rows;++t)s[r][t]=this.data[t][r];return new o(s)},o.identity=function(t){return o.scalar(t,1)},o.scalar=function(t,r){var s,e,i=new Array(t);for(s=0;t>s;++s){for(i[s]=new Array(t),e=0;t>e;++e)i[s][e]=0;i[s][s]=r}return new o(i)},i.prototype.dot=function(r){this.size!==r.size&&t("Vector dot product requires vectors to have same size");for(var e=new Array(this.size),i=0;i<this.size;++i)e[i]=this.data[i]*r.data[i];return s(e)},i.prototype.minus=function(r){this.size!==r.size&&t("Vector subtraction requires vectors to have same size");for(var e=new Array(this.size),o=0;o<this.size;++o)e[o]=s([this.data[o],-r.data[o]]);return new i(e)},i.prototype.minusP=function(r){this.size!==r.size&&t("Vector subtraction requires vectors to have same size");for(var e=0;e<this.size;++e)this.data[e]=s([this.data[e],-r.data[e]]);return this},i.prototype.plus=function(r){this.size!==r.size&&t("Vector addition requires vectors to have same size");for(var e=new Array(this.size),o=0;o<this.size;++o)e[o]=s([this.data[o],r.data[o]]);return new i(e)},i.prototype.plusP=function(r){this.size!==r.size&&t("Vector addition requires vectors to have same size");for(var e=0;e<this.size;++e)this.data[e]=s([this.data[e],r.data[e]]);return this},i.prototype.sum=function(){return s(this.data)},o.prototype.dot=function(r,e){this.cols!==e.size&&t("Vector dot product requires this.columns = vector.size");for(var i=new Array(this.cols),o=0;o<this.cols;++o)i[o]=this.data[r][o]*e.data[o];return s(i)},o.prototype.mul=function(r){var e,a,n,h,c;if(r.isMatrix){for(this.cols!==r.rows&&t("Multiplying by matrix requires this.columns = matrix.rows"),e=new Array(this.rows),a=new Array(this.cols),n=0;n<this.rows;++n)for(e[n]=new Array(r.cols),c=0;c<r.cols;++c){for(h=0;h<this.cols;++h)a[h]=this.data[n][h]*r.data[h][c];e[n][c]=s(a)}return new o(e)}if(r.isVector){for(this.cols!==r.size&&t("Multiplying by vector requires this.columns = vector.size"),e=new Array(this.rows),a=new Array(r.size),n=0;n<this.rows;++n){for(h=0;h<this.cols;++h)a[h]=this.data[n][h]*r.data[h];e[n]=s(a)}return new i(e)}},o.prototype.plusCols=function(r){this.cols!==r.size&&t("Vector length must equal no. of columns");for(var e=new Array(this.rows),i=0;i<this.rows;++i){e[i]=new Array(this.cols);for(var a=0;a<this.cols;++a)e[i][a]=s([this.data[i][a],r.data[a]])}return new o(e)},o.prototype.plusColsP=function(r){this.cols!==r.size&&t("Vector length must equal no. of columns");for(var e=0;e<this.rows;++e)for(var i=0;i<this.cols;++i)this.data[e][i]=s([this.data[e][i],r.data[i]]);return this},e}});